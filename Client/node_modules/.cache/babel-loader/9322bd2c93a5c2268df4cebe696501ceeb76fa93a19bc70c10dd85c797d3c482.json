{"ast":null,"code":"let emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n  passwordRegExp = /^(?=.*\\d)(?=.*[a-zA-Z]).{6,10}$/i;\n\n/*\r\npasswordRegExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm;\r\n-at least 8 characters\r\n- must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number\r\n- Can contain special characters\r\n */\n\nexport default function validation(obj) {\n  let errors = {};\n  console.log(obj.email.length);\n  console.log(!obj.email);\n  if (!obj.email) {\n    errors.email = 'Se requiere un nombre';\n  }\n  if (obj.email && !emailRegExp.test(obj.email)) {\n    errors.email = 'Debe ser un correo electrónico';\n  }\n  if (obj.email.length > 35) {\n    errors.email = 'Mas de 36 characters';\n  }\n  !obj.password ? errors.password = 'Se requiere un password' : obj.password.length > 10 || errors.password.length < 6 ? errors.password = 'La longitud debe ser entre 6 y 10 caracteres' : !passwordRegExp.test(obj.password) ? errors.password = 'La contraseña tiene que tener al menos un número y una longitud entre 6 y 10 caracteres' : errors.email = \"\";\n  /* if(obj.password === ''){\r\n    errors.password = 'Se requiere un password';\r\n    } else {\r\n      if(!passwordRegExp.test(obj.password)) {\r\n        errors.password = 'La contraseña tiene que tener al menos un número y una longitud entre 6 y 10 caracteres'\r\n      }\r\n  } */\n  return errors;\n}\n;","map":{"version":3,"names":["emailRegExp","passwordRegExp","validation","obj","errors","console","log","email","length","test","password"],"sources":["C:/Users/Popis/Documents/Henry/Pi/rick_and_morty/src/helpers/validation.js"],"sourcesContent":["let emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\npasswordRegExp = /^(?=.*\\d)(?=.*[a-zA-Z]).{6,10}$/i;\r\n\r\n/*\r\npasswordRegExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm;\r\n-at least 8 characters\r\n- must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number\r\n- Can contain special characters\r\n */\r\n\r\nexport default function validation (obj) {\r\n  let errors = {};\r\n  console.log(obj.email.length)\r\n  console.log(!obj.email)\r\n  if(!obj.email){\r\n    errors.email = 'Se requiere un nombre';\r\n  }\r\n  if(obj.email && !emailRegExp.test(obj.email)) {\r\n    errors.email = 'Debe ser un correo electrónico'\r\n  }\r\n  if(obj.email.length > 35) {\r\n    errors.email = 'Mas de 36 characters'\r\n  }\r\n  !obj.password \r\n    ? errors.password = 'Se requiere un password'\r\n      : (obj.password.length > 10 || errors.password.length < 6) \r\n      ? errors.password = 'La longitud debe ser entre 6 y 10 caracteres'\r\n        :!passwordRegExp.test(obj.password) \r\n          ? errors.password = 'La contraseña tiene que tener al menos un número y una longitud entre 6 y 10 caracteres'\r\n          : errors.email = \"\";\r\n  /* if(obj.password === ''){\r\n    errors.password = 'Se requiere un password';\r\n    } else {\r\n      if(!passwordRegExp.test(obj.password)) {\r\n        errors.password = 'La contraseña tiene que tener al menos un número y una longitud entre 6 y 10 caracteres'\r\n      }\r\n  } */\r\n  return errors;\r\n};"],"mappings":"AAAA,IAAIA,WAAW,GAAG,2CAA2C;EAC7DC,cAAc,GAAG,kCAAkC;;AAEnD;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAUA,CAAEC,GAAG,EAAE;EACvC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACfC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,KAAK,CAACC,MAAM,CAAC;EAC7BH,OAAO,CAACC,GAAG,CAAC,CAACH,GAAG,CAACI,KAAK,CAAC;EACvB,IAAG,CAACJ,GAAG,CAACI,KAAK,EAAC;IACZH,MAAM,CAACG,KAAK,GAAG,uBAAuB;EACxC;EACA,IAAGJ,GAAG,CAACI,KAAK,IAAI,CAACP,WAAW,CAACS,IAAI,CAACN,GAAG,CAACI,KAAK,CAAC,EAAE;IAC5CH,MAAM,CAACG,KAAK,GAAG,gCAAgC;EACjD;EACA,IAAGJ,GAAG,CAACI,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IACxBJ,MAAM,CAACG,KAAK,GAAG,sBAAsB;EACvC;EACA,CAACJ,GAAG,CAACO,QAAQ,GACTN,MAAM,CAACM,QAAQ,GAAG,yBAAyB,GACxCP,GAAG,CAACO,QAAQ,CAACF,MAAM,GAAG,EAAE,IAAIJ,MAAM,CAACM,QAAQ,CAACF,MAAM,GAAG,CAAC,GACvDJ,MAAM,CAACM,QAAQ,GAAG,8CAA8C,GAC/D,CAACT,cAAc,CAACQ,IAAI,CAACN,GAAG,CAACO,QAAQ,CAAC,GAC/BN,MAAM,CAACM,QAAQ,GAAG,yFAAyF,GAC3GN,MAAM,CAACG,KAAK,GAAG,EAAE;EAC3B;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAOH,MAAM;AACf;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}